{
  "stats": {
    "suites": 5,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-27T09:02:04.087Z",
    "end": "2025-07-27T09:02:32.816Z",
    "duration": 28729,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "345cf1bb-1fb2-4883-9ad7-54ee52aee3d2",
      "title": "",
      "fullFile": "cypress/e2e/todo/Todo.cy.js",
      "file": "cypress/e2e/todo/Todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ba9161f8-a5c0-4ab2-893a-b7936f5e90b9",
          "title": "Todo Management",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "453fd409-2c3e-4fbc-bf91-9a0547192454",
              "title": "Dashboard Load",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load dashboard correctly",
                  "fullTitle": "Todo Management Dashboard Load should load dashboard correctly",
                  "timedOut": null,
                  "duration": 1692,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.shouldBeOnDashboard();",
                  "err": {},
                  "uuid": "c9c3dab4-3421-4ac6-b108-b89f0299be2f",
                  "parentUUID": "453fd409-2c3e-4fbc-bf91-9a0547192454",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show user welcome message",
                  "fullTitle": "Todo Management Dashboard Load should show user welcome message",
                  "timedOut": null,
                  "duration": 811,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.elements.userWelcome().should('contain', 'Demo User');",
                  "err": {},
                  "uuid": "48efa2a9-4816-450c-8ea8-883037a6912f",
                  "parentUUID": "453fd409-2c3e-4fbc-bf91-9a0547192454",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have proper navigation elements",
                  "fullTitle": "Todo Management Dashboard Load should have proper navigation elements",
                  "timedOut": null,
                  "duration": 814,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.elements.addTodoButton().should('be.visible');\ntodoPage.elements.logoutButton().should('be.visible');",
                  "err": {},
                  "uuid": "7cc198e2-2ab2-4c23-af77-9da183587d02",
                  "parentUUID": "453fd409-2c3e-4fbc-bf91-9a0547192454",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9c3dab4-3421-4ac6-b108-b89f0299be2f",
                "48efa2a9-4816-450c-8ea8-883037a6912f",
                "7cc198e2-2ab2-4c23-af77-9da183587d02"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3317,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ac3b48fc-1fca-4cfe-9a50-d71b8b3aa313",
              "title": "Create Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new todo with title and description",
                  "fullTitle": "Todo Management Create Todo should create a new todo with title and description",
                  "timedOut": null,
                  "duration": 4103,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[0];\ntodoPage.interceptTodoRequests().createTodo(todo.title, todo.description).waitForCreateTodo().shouldShowTodo(todo.title).shouldShowTodoDescription(todo.title, todo.description);",
                  "err": {},
                  "uuid": "545bf660-52c0-485c-a08d-4949c79be990",
                  "parentUUID": "ac3b48fc-1fca-4cfe-9a50-d71b8b3aa313",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a todo with only title",
                  "fullTitle": "Todo Management Create Todo should create a todo with only title",
                  "timedOut": null,
                  "duration": 3391,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[1];\ntodoPage.createTodo(todo.title).shouldShowTodo(todo.title);",
                  "err": {},
                  "uuid": "27f06d32-4876-4365-8de0-53d779824c5b",
                  "parentUUID": "ac3b48fc-1fca-4cfe-9a50-d71b8b3aa313",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should cancel todo creation",
                  "fullTitle": "Todo Management Create Todo should cancel todo creation",
                  "timedOut": null,
                  "duration": 3494,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[1];\ntodoPage.createTodo(todo.title, todo.description).cancelTodo();",
                  "err": {},
                  "uuid": "202bcfbb-5838-4051-9200-c8b01ae8e257",
                  "parentUUID": "ac3b48fc-1fca-4cfe-9a50-d71b8b3aa313",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "545bf660-52c0-485c-a08d-4949c79be990",
                "27f06d32-4876-4365-8de0-53d779824c5b",
                "202bcfbb-5838-4051-9200-c8b01ae8e257"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10988,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "36b357bb-a5c6-40c8-8d8f-77e1025e4f7e",
              "title": "Edit Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit todo title and description",
                  "fullTitle": "Todo Management Edit Todo should edit todo title and description",
                  "timedOut": null,
                  "duration": 4901,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const scenario = _todoData.todoData.updateScenarios[0];\ntodoPage.interceptTodoRequests().editTodo(scenario.original.title, scenario.updated.title, scenario.updated.description).waitForUpdateTodo().shouldShowTodo(scenario.updated.title).shouldShowTodoDescription(scenario.updated.title, scenario.updated.description);",
                  "err": {},
                  "uuid": "61b9d382-f171-46c0-b92e-f35cc6d4f577",
                  "parentUUID": "36b357bb-a5c6-40c8-8d8f-77e1025e4f7e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should cancel edit operation",
                  "fullTitle": "Todo Management Edit Todo should cancel edit operation",
                  "timedOut": null,
                  "duration": 5122,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.clickEditTodo('Original Todo').editTodoTitle('This should be cancelled').editTodoDescription('This should also be cancelled').cancelEdit().shouldShowTodo('Original Todo').shouldShowTodoDescription('Original Todo', 'Original description');",
                  "err": {},
                  "uuid": "e0592f45-44ee-4f62-97be-8068a5f6e95c",
                  "parentUUID": "36b357bb-a5c6-40c8-8d8f-77e1025e4f7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "61b9d382-f171-46c0-b92e-f35cc6d4f577",
                "e0592f45-44ee-4f62-97be-8068a5f6e95c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10023,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "07d959ea-e719-447e-a902-007c65cc86ca",
              "title": "Delete Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete existing todo",
                  "fullTitle": "Todo Management Delete Todo should delete existing todo",
                  "timedOut": null,
                  "duration": 4012,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.interceptTodoRequests().deleteTodo('Todo to Delete').waitForDeleteTodo().shouldNotShowTodo('Todo to Delete').shouldNotShowError();",
                  "err": {},
                  "uuid": "af56e898-d124-4fe9-9118-84716a81cdee",
                  "parentUUID": "07d959ea-e719-447e-a902-007c65cc86ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af56e898-d124-4fe9-9118-84716a81cdee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4012,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}