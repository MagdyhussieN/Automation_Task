name: Test CI Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          cypress-tests/package-lock.json
          frontend/package-lock.json
          backend/package-lock.json

    - name: Install Cypress dependencies
      working-directory: cypress-tests
      run: npm ci

    - name: Install Frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Install Backend dependencies
      working-directory: backend
      run: npm ci

    - name: Install Newman for API testing
      run: npm install -g newman

    - name: Create Postman collection directory
      run: mkdir -p cypress-tests/postman



    - name: Start Backend Server
      working-directory: backend
      run: |
        nohup npm run dev > ../backend.log 2>&1 &
        echo $! > backend.pid
    
    - name: Start Frontend Server
      working-directory: frontend
      run: |
        nohup npm run dev > ../frontend.log 2>&1 &
        echo $! > frontend.pid
    
    - name: Wait for Backend to be ready
      run: |
        echo "Waiting for backend to be ready..."
        timeout 90 bash -c 'until curl -sSf http://localhost:5001/health; do sleep 2; done'
    
    - name: Wait for Frontend to be ready
      run: |
        echo "Waiting for frontend to be ready..."
        timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
    
    - name: Short delay before Postman
      run: sleep 5
    
    - name: Run Postman collection
      working-directory: cypress-tests
      run: |
        for i in 1 2 3; do
          newman run postman/qa-collection.json --reporters cli && break || sleep 3
        done
    
    - name: Print Backend Logs
      if: failure()
      run: cat backend.log || echo "No backend logs"
    
      

    - name: Run Cypress Tests
      working-directory: cypress-tests
      run: |
        npx cypress run --record false --browser chrome --headless
      env:
        CI: true
        CYPRESS_baseUrl: http://localhost:3000

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots-${{ github.run_id }}
        path: cypress-tests/cypress/screenshots/
        retention-days: 30


    - name: Generate timestamp
      id: timestamp
      run: echo "ts=$(date +%s)" >> "$GITHUB_OUTPUT"

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}-${{ steps.timestamp.outputs.ts }}
        path: cypress-tests/cypress/videos/
        retention-days: 30

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}-${{ steps.timestamp.outputs.ts }}
        path: cypress-tests/cypress/reports/report.html
        retention-days: 30

    - name: Upload API test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-results-${{ github.run_id }}
        path: cypress-tests/results/
        retention-days: 30

    - name: Generate Test Report
      if: always()
      run: |
        cd cypress-tests
        npm run test:report

    - name: Stop Backend Server
      if: always()
      run: |
        if [ -f backend/backend.pid ]; then
          kill $(cat backend/backend.pid) || true
          rm backend/backend.pid
        fi

    - name: Stop Frontend Server
      if: always()
      run: |
        if [ -f frontend/frontend.pid ]; then
          kill $(cat frontend/frontend.pid) || true
          rm frontend/frontend.pid
        fi

    - name: Cleanup processes
      if: always()
      run: |
        pkill -f "node.*server.js" || true
        pkill -f "vite" || true
        pkill -f "cypress" || true 

    
