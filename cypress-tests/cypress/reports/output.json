{
  "stats": {
    "suites": 4,
    "tests": 42,
    "passes": 42,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 42,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-07-26T23:53:33.881Z",
    "end": "2025-07-26T23:57:02.112Z",
    "duration": 208231
  },
  "results": [
    {
      "uuid": "06074051-92bf-4fe5-8c60-192e66578d34",
      "title": "",
      "fullFile": "cypress/e2e/login/login.cy.js",
      "file": "cypress/e2e/login/login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c847a99-28d1-4d1c-aee6-b136caf2825e",
          "title": "Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "493a11cd-1e58-44c8-85a1-30c112179315",
              "title": "Page Load",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load login page correctly",
                  "fullTitle": "Login Page Page Load should load login page correctly",
                  "timedOut": null,
                  "duration": 885,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.shouldBeOnLoginPage().shouldShowDemoCredentials().shouldHaveProperLabels().shouldRequireEmail().shouldRequirePassword().shouldHaveEmailType().shouldHavePasswordType();",
                  "err": {},
                  "uuid": "28585121-86e1-425a-9e16-3951089de70a",
                  "parentUUID": "493a11cd-1e58-44c8-85a1-30c112179315",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have proper form structure",
                  "fullTitle": "Login Page Page Load should have proper form structure",
                  "timedOut": null,
                  "duration": 171,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.elements.loginForm().should('exist');\nloginPage.elements.emailInput().should('be.visible');\nloginPage.elements.passwordInput().should('be.visible');\nloginPage.elements.loginButton().should('be.visible');",
                  "err": {},
                  "uuid": "a3c7f5ad-dc31-4185-adac-8116cdeb8814",
                  "parentUUID": "493a11cd-1e58-44c8-85a1-30c112179315",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28585121-86e1-425a-9e16-3951089de70a",
                "a3c7f5ad-dc31-4185-adac-8116cdeb8814"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1056,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fd687bc5-68c6-4788-9cd5-2f44453b3a9b",
              "title": "Valid Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should login with valid credentials",
                  "fullTitle": "Login Page Valid Login should login with valid credentials",
                  "timedOut": null,
                  "duration": 1139,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.interceptLoginRequest().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).waitForLoginRequest().shouldBeLoggedIn().shouldNotShowError();",
                  "err": {},
                  "uuid": "cad91606-ddca-4d4b-a6c7-e73c0d00e1d0",
                  "parentUUID": "fd687bc5-68c6-4788-9cd5-2f44453b3a9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should redirect to dashboard after successful login",
                  "fullTitle": "Login Page Valid Login should redirect to dashboard after successful login",
                  "timedOut": null,
                  "duration": 1036,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\n// Verify dashboard elements are visible\ncy.contains('h1', 'Todo Manager').should('be.visible');\ncy.contains('button', 'Logout').should('be.visible');\ncy.contains('button', 'Add New Todo').should('be.visible');",
                  "err": {},
                  "uuid": "9e67334d-ffe8-4739-b6ea-949ba5cb6c21",
                  "parentUUID": "fd687bc5-68c6-4788-9cd5-2f44453b3a9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show welcome message with user name",
                  "fullTitle": "Login Page Valid Login should show welcome message with user name",
                  "timedOut": null,
                  "duration": 1199,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\ncy.get('[data-testid=\"user-welcome\"]').should('contain', _loginData.loginData.validUser.name);",
                  "err": {},
                  "uuid": "eb259608-0450-46e6-a374-16de4acc9d39",
                  "parentUUID": "fd687bc5-68c6-4788-9cd5-2f44453b3a9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cad91606-ddca-4d4b-a6c7-e73c0d00e1d0",
                "9e67334d-ffe8-4739-b6ea-949ba5cb6c21",
                "eb259608-0450-46e6-a374-16de4acc9d39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3374,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "61c62858-0194-45cb-8b94-a75f7f1bd2b8",
              "title": "Invalid Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show error for Invalid email",
                  "fullTitle": "Login Page Invalid Login should show error for Invalid email",
                  "timedOut": null,
                  "duration": 1150,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.interceptLoginRequest().login(credential.email, credential.password);\ncy.contains('h1', 'Todo Manager').should('not.exist');\ncy.contains('button', 'Logout').should('not.exist');\ncy.contains('button', 'Add New Todo').should('not.exist');",
                  "err": {},
                  "uuid": "dc4b6fe7-d1b5-45eb-9442-5f0dda0f05cf",
                  "parentUUID": "61c62858-0194-45cb-8b94-a75f7f1bd2b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc4b6fe7-d1b5-45eb-9442-5f0dda0f05cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1150,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e1697b6a-e20e-4386-858b-f3eb7cdb64bc",
              "title": "Form Validation",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should enable login button when form has data",
                  "fullTitle": "Login Page Form Validation should enable login button when form has data",
                  "timedOut": null,
                  "duration": 933,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).shouldHaveEnabledLoginButton();",
                  "err": {},
                  "uuid": "825bb7f6-865a-489c-b724-bd57940c1949",
                  "parentUUID": "e1697b6a-e20e-4386-858b-f3eb7cdb64bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should enable login button when form has data",
                  "fullTitle": "Login Page Form Validation should enable login button when form has data",
                  "timedOut": null,
                  "duration": 924,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).shouldHaveEnabledLoginButton();",
                  "err": {},
                  "uuid": "e61a2183-6c8c-412d-94c5-1ccc284f08ec",
                  "parentUUID": "e1697b6a-e20e-4386-858b-f3eb7cdb64bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should enable login button when form has data",
                  "fullTitle": "Login Page Form Validation should enable login button when form has data",
                  "timedOut": null,
                  "duration": 865,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).shouldHaveEnabledLoginButton();",
                  "err": {},
                  "uuid": "1b32e3c4-1e7a-430d-ae9b-afb50b3388b0",
                  "parentUUID": "e1697b6a-e20e-4386-858b-f3eb7cdb64bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "825bb7f6-865a-489c-b724-bd57940c1949",
                "e61a2183-6c8c-412d-94c5-1ccc284f08ec",
                "1b32e3c4-1e7a-430d-ae9b-afb50b3388b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2722,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fb8ffbf1-e574-436b-968a-e772431d3349",
              "title": "User Experience",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should allow form submission with Enter key",
                  "fullTitle": "Login Page User Experience should allow form submission with Enter key",
                  "timedOut": null,
                  "duration": 974,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).submitForm().shouldBeLoggedIn();",
                  "err": {},
                  "uuid": "a364087b-d8e2-4383-821d-9245748589ce",
                  "parentUUID": "fb8ffbf1-e574-436b-968a-e772431d3349",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a364087b-d8e2-4383-821d-9245748589ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 974,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "837ded89-5183-4a97-8180-4b194c71cc85",
              "title": "Security",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not expose password in URL or page source",
                  "fullTitle": "Login Page Security should not expose password in URL or page source",
                  "timedOut": null,
                  "duration": 696,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typePassword('secretpassword').clickLogin();\ncy.url().should('not.contain', 'secretpassword');\ncy.get('body').should('not.contain', 'secretpassword');",
                  "err": {},
                  "uuid": "8e8ccde4-3a95-4b7c-ad41-79ce47e878b7",
                  "parentUUID": "837ded89-5183-4a97-8180-4b194c71cc85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e8ccde4-3a95-4b7c-ad41-79ce47e878b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 696,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4cb6d79a-941d-4917-ac29-e7552b933932",
              "title": "Cross-browser Compatibility",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with different viewport sizes",
                  "fullTitle": "Login Page Cross-browser Compatibility should work with different viewport sizes",
                  "timedOut": null,
                  "duration": 2978,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Test mobile viewport\ncy.viewport(375, 667);\nloginPage.shouldBeOnLoginPage().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\n// Test tablet viewport\ncy.viewport(768, 1024);\nloginPage.visit();\nloginPage.shouldBeOnLoginPage().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\n// Test desktop viewport\ncy.viewport(1280, 720);\nloginPage.visit();\nloginPage.shouldBeOnLoginPage().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();",
                  "err": {},
                  "uuid": "0776888e-a842-4b55-a7c7-313d532d9305",
                  "parentUUID": "4cb6d79a-941d-4917-ac29-e7552b933932",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0776888e-a842-4b55-a7c7-313d532d9305"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2978,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec19b650-e1d8-4820-9457-683f01a11da8",
      "title": "",
      "fullFile": "cypress/e2e/todo/Todo.cy.js",
      "file": "cypress/e2e/todo/Todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a71c01ac-3e19-45cc-8046-ccfa18d889e1",
          "title": "Todo Management",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9f4e4a24-8e17-4cca-a93a-13acc2470228",
              "title": "Dashboard Load",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load dashboard correctly",
                  "fullTitle": "Todo Management Dashboard Load should load dashboard correctly",
                  "timedOut": null,
                  "duration": 1125,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.shouldBeOnDashboard();",
                  "err": {},
                  "uuid": "07d3f4ed-2fa7-4c71-82e9-336fae98dcb3",
                  "parentUUID": "9f4e4a24-8e17-4cca-a93a-13acc2470228",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show user welcome message",
                  "fullTitle": "Todo Management Dashboard Load should show user welcome message",
                  "timedOut": null,
                  "duration": 1137,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.elements.userWelcome().should('contain', 'Demo User');",
                  "err": {},
                  "uuid": "853cd63e-e5b9-4936-974b-d3283f9863f0",
                  "parentUUID": "9f4e4a24-8e17-4cca-a93a-13acc2470228",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have proper navigation elements",
                  "fullTitle": "Todo Management Dashboard Load should have proper navigation elements",
                  "timedOut": null,
                  "duration": 823,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.elements.addTodoButton().should('be.visible');\ntodoPage.elements.logoutButton().should('be.visible');",
                  "err": {},
                  "uuid": "a79f204b-5ac9-4256-9403-251bcbd50996",
                  "parentUUID": "9f4e4a24-8e17-4cca-a93a-13acc2470228",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07d3f4ed-2fa7-4c71-82e9-336fae98dcb3",
                "853cd63e-e5b9-4936-974b-d3283f9863f0",
                "a79f204b-5ac9-4256-9403-251bcbd50996"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3085,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a937e301-eb59-4f01-87d3-4231a1f95816",
              "title": "Create Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new todo with title and description",
                  "fullTitle": "Todo Management Create Todo should create a new todo with title and description",
                  "timedOut": null,
                  "duration": 4060,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[0];\ntodoPage.interceptTodoRequests().createTodo(todo.title, todo.description).waitForCreateTodo().shouldShowTodo(todo.title).shouldShowTodoDescription(todo.title, todo.description);",
                  "err": {},
                  "uuid": "25fd978d-a17d-4005-9b40-042af3962964",
                  "parentUUID": "a937e301-eb59-4f01-87d3-4231a1f95816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a todo with only title",
                  "fullTitle": "Todo Management Create Todo should create a todo with only title",
                  "timedOut": null,
                  "duration": 3478,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[1];\ntodoPage.createTodo(todo.title).shouldShowTodo(todo.title);",
                  "err": {},
                  "uuid": "bb262186-23b5-4efa-920e-97fece710c15",
                  "parentUUID": "a937e301-eb59-4f01-87d3-4231a1f95816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should cancel todo creation",
                  "fullTitle": "Todo Management Create Todo should cancel todo creation",
                  "timedOut": null,
                  "duration": 4566,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[1];\ntodoPage.createTodo(todo.title, todo.description).cancelTodo();",
                  "err": {},
                  "uuid": "7a938efb-f7d3-462d-ac93-a530b8245e88",
                  "parentUUID": "a937e301-eb59-4f01-87d3-4231a1f95816",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25fd978d-a17d-4005-9b40-042af3962964",
                "bb262186-23b5-4efa-920e-97fece710c15",
                "7a938efb-f7d3-462d-ac93-a530b8245e88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12104,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cacd0f41-b54b-44f4-bb09-235fe9c2cadd",
              "title": "Edit Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit todo title and description",
                  "fullTitle": "Todo Management Edit Todo should edit todo title and description",
                  "timedOut": null,
                  "duration": 5232,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const scenario = _todoData.todoData.updateScenarios[0];\ntodoPage.interceptTodoRequests().editTodo(scenario.original.title, scenario.updated.title, scenario.updated.description).waitForUpdateTodo().shouldShowTodo(scenario.updated.title).shouldShowTodoDescription(scenario.updated.title, scenario.updated.description);",
                  "err": {},
                  "uuid": "1b1f82c7-dc32-4a01-a45a-bfecf34a15db",
                  "parentUUID": "cacd0f41-b54b-44f4-bb09-235fe9c2cadd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should cancel edit operation",
                  "fullTitle": "Todo Management Edit Todo should cancel edit operation",
                  "timedOut": null,
                  "duration": 5512,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.clickEditTodo('Original Todo').editTodoTitle('This should be cancelled').editTodoDescription('This should also be cancelled').cancelEdit().shouldShowTodo('Original Todo').shouldShowTodoDescription('Original Todo', 'Original description');",
                  "err": {},
                  "uuid": "be610596-c672-4acd-8119-d36e4e181c50",
                  "parentUUID": "cacd0f41-b54b-44f4-bb09-235fe9c2cadd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b1f82c7-dc32-4a01-a45a-bfecf34a15db",
                "be610596-c672-4acd-8119-d36e4e181c50"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10744,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4a7e311c-cb87-4515-82a4-9fb0fe948add",
              "title": "Delete Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete existing todo",
                  "fullTitle": "Todo Management Delete Todo should delete existing todo",
                  "timedOut": null,
                  "duration": 4414,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.interceptTodoRequests().deleteTodo('Todo to Delete').waitForDeleteTodo().shouldNotShowTodo('Todo to Delete').shouldNotShowError();",
                  "err": {},
                  "uuid": "1ac0931b-c56b-4e4f-870f-34935544bf94",
                  "parentUUID": "4a7e311c-cb87-4515-82a4-9fb0fe948add",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ac0931b-c56b-4e4f-870f-34935544bf94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4414,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0892210c-d213-43bc-bddb-16c54e20cae6",
      "title": "",
      "fullFile": "cypress/e2e/login/login.cy.js",
      "file": "cypress/e2e/login/login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "02393239-d0e1-456e-b4a1-9012f34a8cb2",
          "title": "Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "04fa4d06-fdf3-4bd9-a2b5-6a930b2c1392",
              "title": "Page Load",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load login page correctly",
                  "fullTitle": "Login Page Page Load should load login page correctly",
                  "timedOut": null,
                  "duration": 476,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.shouldBeOnLoginPage().shouldShowDemoCredentials().shouldHaveProperLabels().shouldRequireEmail().shouldRequirePassword().shouldHaveEmailType().shouldHavePasswordType();",
                  "err": {},
                  "uuid": "8f81fe64-47cc-4805-b6a4-286e2f7654d7",
                  "parentUUID": "04fa4d06-fdf3-4bd9-a2b5-6a930b2c1392",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have proper form structure",
                  "fullTitle": "Login Page Page Load should have proper form structure",
                  "timedOut": null,
                  "duration": 136,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.elements.loginForm().should('exist');\nloginPage.elements.emailInput().should('be.visible');\nloginPage.elements.passwordInput().should('be.visible');\nloginPage.elements.loginButton().should('be.visible');",
                  "err": {},
                  "uuid": "64c53e07-dc2c-4e11-a1b0-fed0d2013165",
                  "parentUUID": "04fa4d06-fdf3-4bd9-a2b5-6a930b2c1392",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f81fe64-47cc-4805-b6a4-286e2f7654d7",
                "64c53e07-dc2c-4e11-a1b0-fed0d2013165"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 612,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4f321acd-b516-45e0-97f9-3c09585b1e91",
              "title": "Valid Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should login with valid credentials",
                  "fullTitle": "Login Page Valid Login should login with valid credentials",
                  "timedOut": null,
                  "duration": 1076,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.interceptLoginRequest().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).waitForLoginRequest().shouldBeLoggedIn().shouldNotShowError();",
                  "err": {},
                  "uuid": "7238f244-bee4-4ec1-8464-c345671d1e81",
                  "parentUUID": "4f321acd-b516-45e0-97f9-3c09585b1e91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should redirect to dashboard after successful login",
                  "fullTitle": "Login Page Valid Login should redirect to dashboard after successful login",
                  "timedOut": null,
                  "duration": 991,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\n// Verify dashboard elements are visible\ncy.contains('h1', 'Todo Manager').should('be.visible');\ncy.contains('button', 'Logout').should('be.visible');\ncy.contains('button', 'Add New Todo').should('be.visible');",
                  "err": {},
                  "uuid": "1d641a3a-a5b5-4737-9638-ad69cf249b17",
                  "parentUUID": "4f321acd-b516-45e0-97f9-3c09585b1e91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show welcome message with user name",
                  "fullTitle": "Login Page Valid Login should show welcome message with user name",
                  "timedOut": null,
                  "duration": 1096,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\ncy.get('[data-testid=\"user-welcome\"]').should('contain', _loginData.loginData.validUser.name);",
                  "err": {},
                  "uuid": "baae84c3-989f-40bf-9502-d8fe6a023595",
                  "parentUUID": "4f321acd-b516-45e0-97f9-3c09585b1e91",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7238f244-bee4-4ec1-8464-c345671d1e81",
                "1d641a3a-a5b5-4737-9638-ad69cf249b17",
                "baae84c3-989f-40bf-9502-d8fe6a023595"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3163,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "77cce0b8-1c5d-4d99-bb6d-8cd12fff679f",
              "title": "Invalid Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show error for Invalid email",
                  "fullTitle": "Login Page Invalid Login should show error for Invalid email",
                  "timedOut": null,
                  "duration": 1128,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.interceptLoginRequest().login(credential.email, credential.password);\ncy.contains('h1', 'Todo Manager').should('not.exist');\ncy.contains('button', 'Logout').should('not.exist');\ncy.contains('button', 'Add New Todo').should('not.exist');",
                  "err": {},
                  "uuid": "9322bad1-a154-4acf-b5f5-bf207b0e38f1",
                  "parentUUID": "77cce0b8-1c5d-4d99-bb6d-8cd12fff679f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9322bad1-a154-4acf-b5f5-bf207b0e38f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1128,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a73d85cc-431f-4042-a165-326010b24704",
              "title": "Form Validation",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should enable login button when form has data",
                  "fullTitle": "Login Page Form Validation should enable login button when form has data",
                  "timedOut": null,
                  "duration": 845,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).shouldHaveEnabledLoginButton();",
                  "err": {},
                  "uuid": "57b1308b-4a1f-4b20-810e-6744cdf81f61",
                  "parentUUID": "a73d85cc-431f-4042-a165-326010b24704",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should enable login button when form has data",
                  "fullTitle": "Login Page Form Validation should enable login button when form has data",
                  "timedOut": null,
                  "duration": 845,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).shouldHaveEnabledLoginButton();",
                  "err": {},
                  "uuid": "5805dced-9f90-41e3-ab6e-5ebc7180637f",
                  "parentUUID": "a73d85cc-431f-4042-a165-326010b24704",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should enable login button when form has data",
                  "fullTitle": "Login Page Form Validation should enable login button when form has data",
                  "timedOut": null,
                  "duration": 870,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).shouldHaveEnabledLoginButton();",
                  "err": {},
                  "uuid": "5b187d2d-cf0e-4cb7-af02-16f098e8b60a",
                  "parentUUID": "a73d85cc-431f-4042-a165-326010b24704",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57b1308b-4a1f-4b20-810e-6744cdf81f61",
                "5805dced-9f90-41e3-ab6e-5ebc7180637f",
                "5b187d2d-cf0e-4cb7-af02-16f098e8b60a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2560,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f6eb6b56-ba79-4218-b410-2d3cf21d4ebb",
              "title": "User Experience",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should allow form submission with Enter key",
                  "fullTitle": "Login Page User Experience should allow form submission with Enter key",
                  "timedOut": null,
                  "duration": 956,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typeEmail(_loginData.loginData.validUser.email).typePassword(_loginData.loginData.validUser.password).submitForm().shouldBeLoggedIn();",
                  "err": {},
                  "uuid": "b7606721-1b6d-44f9-93aa-f290e1051e48",
                  "parentUUID": "f6eb6b56-ba79-4218-b410-2d3cf21d4ebb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7606721-1b6d-44f9-93aa-f290e1051e48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 956,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8d0cf569-6680-47c7-a54b-e1ff5cc538ae",
              "title": "Security",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not expose password in URL or page source",
                  "fullTitle": "Login Page Security should not expose password in URL or page source",
                  "timedOut": null,
                  "duration": 611,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "loginPage.typePassword('secretpassword').clickLogin();\ncy.url().should('not.contain', 'secretpassword');\ncy.get('body').should('not.contain', 'secretpassword');",
                  "err": {},
                  "uuid": "a943cf6d-1047-490d-a456-7c419cecc985",
                  "parentUUID": "8d0cf569-6680-47c7-a54b-e1ff5cc538ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a943cf6d-1047-490d-a456-7c419cecc985"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 611,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "016ca53f-c0c5-4564-8834-1c28c83b466b",
              "title": "Cross-browser Compatibility",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with different viewport sizes",
                  "fullTitle": "Login Page Cross-browser Compatibility should work with different viewport sizes",
                  "timedOut": null,
                  "duration": 3007,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Test mobile viewport\ncy.viewport(375, 667);\nloginPage.shouldBeOnLoginPage().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\n// Test tablet viewport\ncy.viewport(768, 1024);\nloginPage.visit();\nloginPage.shouldBeOnLoginPage().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();\n// Test desktop viewport\ncy.viewport(1280, 720);\nloginPage.visit();\nloginPage.shouldBeOnLoginPage().login(_loginData.loginData.validUser.email, _loginData.loginData.validUser.password).shouldBeLoggedIn();",
                  "err": {},
                  "uuid": "a695cb91-086d-4392-ba8b-9a6d836c058c",
                  "parentUUID": "016ca53f-c0c5-4564-8834-1c28c83b466b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a695cb91-086d-4392-ba8b-9a6d836c058c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3007,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2756879c-be45-4a9b-8c6e-527a6e226c30",
      "title": "",
      "fullFile": "cypress/e2e/todo/Todo.cy.js",
      "file": "cypress/e2e/todo/Todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05dd3d76-c12e-4bc4-8c39-c06ff16d1c49",
          "title": "Todo Management",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6fefc072-0ddf-4eea-a14b-d88db50d076a",
              "title": "Dashboard Load",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load dashboard correctly",
                  "fullTitle": "Todo Management Dashboard Load should load dashboard correctly",
                  "timedOut": null,
                  "duration": 1056,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.shouldBeOnDashboard();",
                  "err": {},
                  "uuid": "32fa0bba-1821-4915-b897-d64935c71e29",
                  "parentUUID": "6fefc072-0ddf-4eea-a14b-d88db50d076a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show user welcome message",
                  "fullTitle": "Todo Management Dashboard Load should show user welcome message",
                  "timedOut": null,
                  "duration": 796,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.elements.userWelcome().should('contain', 'Demo User');",
                  "err": {},
                  "uuid": "685305c9-ac11-4cc0-8fef-9c11fc7666d0",
                  "parentUUID": "6fefc072-0ddf-4eea-a14b-d88db50d076a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have proper navigation elements",
                  "fullTitle": "Todo Management Dashboard Load should have proper navigation elements",
                  "timedOut": null,
                  "duration": 862,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.elements.addTodoButton().should('be.visible');\ntodoPage.elements.logoutButton().should('be.visible');",
                  "err": {},
                  "uuid": "1ba0cc6c-dca1-4150-b7a3-6a02bacdffd7",
                  "parentUUID": "6fefc072-0ddf-4eea-a14b-d88db50d076a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32fa0bba-1821-4915-b897-d64935c71e29",
                "685305c9-ac11-4cc0-8fef-9c11fc7666d0",
                "1ba0cc6c-dca1-4150-b7a3-6a02bacdffd7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2714,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5e7adbe6-2886-42c1-8cc0-1dd7f9d37bfd",
              "title": "Create Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new todo with title and description",
                  "fullTitle": "Todo Management Create Todo should create a new todo with title and description",
                  "timedOut": null,
                  "duration": 4159,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[0];\ntodoPage.interceptTodoRequests().createTodo(todo.title, todo.description).waitForCreateTodo().shouldShowTodo(todo.title).shouldShowTodoDescription(todo.title, todo.description);",
                  "err": {},
                  "uuid": "0903a654-d61f-4d25-b987-b2722d711a6b",
                  "parentUUID": "5e7adbe6-2886-42c1-8cc0-1dd7f9d37bfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a todo with only title",
                  "fullTitle": "Todo Management Create Todo should create a todo with only title",
                  "timedOut": null,
                  "duration": 3563,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[1];\ntodoPage.createTodo(todo.title).shouldShowTodo(todo.title);",
                  "err": {},
                  "uuid": "5490fb37-669e-49f8-9309-d0edbf814e92",
                  "parentUUID": "5e7adbe6-2886-42c1-8cc0-1dd7f9d37bfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should cancel todo creation",
                  "fullTitle": "Todo Management Create Todo should cancel todo creation",
                  "timedOut": null,
                  "duration": 3869,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const todo = _todoData.todoData.newTodos[1];\ntodoPage.createTodo(todo.title, todo.description).cancelTodo();",
                  "err": {},
                  "uuid": "0e971ae2-eddf-4f9a-b6a2-60c592b4bc8b",
                  "parentUUID": "5e7adbe6-2886-42c1-8cc0-1dd7f9d37bfd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0903a654-d61f-4d25-b987-b2722d711a6b",
                "5490fb37-669e-49f8-9309-d0edbf814e92",
                "0e971ae2-eddf-4f9a-b6a2-60c592b4bc8b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11591,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2748aadf-bcf4-41ff-a4ef-c9e919894cca",
              "title": "Edit Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit todo title and description",
                  "fullTitle": "Todo Management Edit Todo should edit todo title and description",
                  "timedOut": null,
                  "duration": 5300,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const scenario = _todoData.todoData.updateScenarios[0];\ntodoPage.interceptTodoRequests().editTodo(scenario.original.title, scenario.updated.title, scenario.updated.description).waitForUpdateTodo().shouldShowTodo(scenario.updated.title).shouldShowTodoDescription(scenario.updated.title, scenario.updated.description);",
                  "err": {},
                  "uuid": "43699e63-1475-4ef8-870d-1e55d5b17591",
                  "parentUUID": "2748aadf-bcf4-41ff-a4ef-c9e919894cca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should cancel edit operation",
                  "fullTitle": "Todo Management Edit Todo should cancel edit operation",
                  "timedOut": null,
                  "duration": 6054,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.clickEditTodo('Original Todo').editTodoTitle('This should be cancelled').editTodoDescription('This should also be cancelled').cancelEdit().shouldShowTodo('Original Todo').shouldShowTodoDescription('Original Todo', 'Original description');",
                  "err": {},
                  "uuid": "71429ea3-b650-4a9a-9533-5a706ceb5689",
                  "parentUUID": "2748aadf-bcf4-41ff-a4ef-c9e919894cca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43699e63-1475-4ef8-870d-1e55d5b17591",
                "71429ea3-b650-4a9a-9533-5a706ceb5689"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11354,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "34569de3-c4cd-4cff-adb6-37fc3543afc2",
              "title": "Delete Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete existing todo",
                  "fullTitle": "Todo Management Delete Todo should delete existing todo",
                  "timedOut": null,
                  "duration": 4092,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todoPage.interceptTodoRequests().deleteTodo('Todo to Delete').waitForDeleteTodo().shouldNotShowTodo('Todo to Delete').shouldNotShowError();",
                  "err": {},
                  "uuid": "5ff11966-fb6a-477c-af86-4c44a98f06a6",
                  "parentUUID": "34569de3-c4cd-4cff-adb6-37fc3543afc2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ff11966-fb6a-477c-af86-4c44a98f06a6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4092,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}